#include "KowerKoint/general.hpp"

/* #include <atcoder/all> */
/* using namespace atcoder; */
/* #include "KowerKoint/expansion/ac-library/all.hpp" */
#include "KowerKoint/segtree.hpp"

void solve(){
    int n, q; cin >>  n>> q;
    VL a(n); cin >> a;
    RMaxQ<ll> rmq(a);
    REP(_, q) {
        ll t, l, r; cin >> t >> l >> r;
        if(t == 1) {
            l--;
            rmq.set(l, r);
        } else if(t == 2) {
            l--;
            print(rmq.prod(l, r));
        } else {
            l--;
            print(rmq.max_right(l, [&](ll x) { return x < r; }) + 1);
        }
    }
}

// generated by oj-template v4.7.2 (https://github.com/online-judge-tools/template-generator)
int main() {
    // Fasterize input/output script
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(100);
    // scanf/printf user should delete this fasterize input/output script

    int t = 1;
    //cin >> t; // comment out if solving multi testcase
    for(int testCase = 1;testCase <= t;++testCase){
        solve();
    }
    return 0;
}
