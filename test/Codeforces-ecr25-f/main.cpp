#include "KowerKoint/base.hpp"

/* #include <atcoder/all> */
/* using namespace atcoder; */
/* #include "KowerKoint/expansion/ac-library/all.hpp" */
#include "KowerKoint/string.hpp"

void solve(){
    string s; cin >> s;
    int n = s.length();
    VI dp(n+1, INF);
    VI len(n+1);
    FOR(i, 1, n+1) len[i] = to_string(i).length();
    dp[0] = 0;
    REP(i, n) {
        VI kmp = kmp_table(s.begin() + i, s.end());
        FOR(j, 1, n-i+1) {
            int t = j - kmp[j-1];
            chmin(dp[i+j], dp[i] + 1 + j);
            if(j % t == 0) chmin(dp[i+j], dp[i] + len[j/t] + t);
        }
    }
    print(dp[n]);
}

// generated by oj-template v4.7.2 (https://github.com/online-judge-tools/template-generator)
int main() {
    // Fasterize input/output script
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(100);
    // scanf/printf user should delete this fasterize input/output script

    int t = 1;
    //cin >> t; // comment out if solving multi testcase
    for(int testCase = 1;testCase <= t;++testCase){
        solve();
    }
    return 0;
}
